services:
  unitree_lidar:
    build:
      context: .
      dockerfile: Dockerfile
      network: host
    container_name: unitree_lidar_ros2
    privileged: true
    environment:
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
      - SERIAL_DEVICE=/dev/ttyACM0
      - BAUDRATE=4000000
      - ROS_DOMAIN_ID=0
      # FastDDS network configuration for cross-host communication
      - RMW_IMPLEMENTATION=rmw_fastrtps_cpp
      - FASTRTPS_DEFAULT_PROFILES_FILE=
      # Network discovery configuration
      - ROS_LOCALHOST_ONLY=0
      - ROS_AUTOMATIC_DISCOVERY_RANGE=SUBNET
      # User ID for file permissions
      - USER_ID=${USER_ID:-1000}
      - GROUP_ID=${GROUP_ID:-1000}
    volumes:
      # X11 forwarding for RViz
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ~/.Xauthority:/root/.Xauthority:rw
      # Serial device access
      - /dev:/dev
      # Optional: Mount config directory for parameter changes
      - ./config:/workspace/config:rw
      # ROS bag recording output directory
      - ${PWD}/bags:/workspace/bags:rw
    devices:
      # Serial device access (alternative to privileged mode)
      - /dev/ttyACM0:/dev/ttyACM0
      # Add other common serial devices
      - /dev/ttyUSB0:/dev/ttyUSB0
      - /dev/ttyUSB1:/dev/ttyUSB1
    network_mode: host  # Use host networking for DDS communication
    restart: unless-stopped
    command: >
      bash -c "
        echo 'Starting Unitree LiDAR ROS2 services...'
        ros2 launch unitree_lidar_ros2 launch.py enable_lidar:=${ENABLE_LIDAR:-true} enable_rviz:=${ENABLE_RVIZ:-true} &
        
        if [ '${ENABLE_LIDAR:-true}' = 'true' ]; then
          echo 'Waiting for LiDAR to initialize...'
          sleep 10
        fi
        
        echo 'Starting Foxglove Bridge...'
        ros2 run foxglove_bridge foxglove_bridge --ros-args -p port:=8765 &
        
        echo 'Starting ROS Bridge...'
        ros2 launch rosbridge_server rosbridge_websocket_launch.xml port:=9090 &
        
        wait
      "

  rviz:
    build:
      context: .
      dockerfile: Dockerfile
      network: host
    container_name: unitree_lidar_rviz
    environment:
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
      - ROS_DOMAIN_ID=0
      # FastDDS network configuration for cross-host communication
      - RMW_IMPLEMENTATION=rmw_fastrtps_cpp
      - FASTRTPS_DEFAULT_PROFILES_FILE=
      # Network discovery configuration
      - ROS_LOCALHOST_ONLY=0
      - ROS_AUTOMATIC_DISCOVERY_RANGE=SUBNET
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ~/.Xauthority:/root/.Xauthority:rw
    network_mode: host  # Use host networking for DDS communication
    depends_on:
      - unitree_lidar
    profiles:
      - rviz-only
    command: >
      bash -c "
        sleep 5
        ros2 run rviz2 rviz2 -d /workspace/unilidar_sdk2/unitree_lidar_ros2/src/unitree_lidar_ros2/rviz/view.rviz
      "

# Host networking used - no custom networks needed
